# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-08-10 17:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [("peer_course", "0001_initial")]

    operations = [
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_column="name", max_length=128, verbose_name="Display Name"
                    ),
                ),
                (
                    "browsable",
                    models.BooleanField(
                        db_column="visible",
                        default=False,
                        verbose_name="Visible to students",
                    ),
                ),
                (
                    "release_time",
                    models.DateTimeField(
                        blank=True,
                        db_column="release_time",
                        default=None,
                        null=True,
                        verbose_name="Release Time",
                    ),
                ),
                (
                    "deadline",
                    models.DateTimeField(
                        blank=True,
                        db_column="deadline",
                        default=None,
                        null=True,
                        verbose_name="Deadline",
                    ),
                ),
                (
                    "max_late_units",
                    models.PositiveIntegerField(
                        blank=True, default=2, verbose_name="Max Late Days allowed"
                    ),
                ),
                (
                    "grace_hours",
                    models.FloatField(
                        blank=True, default=2, verbose_name="# of Grace hours"
                    ),
                ),
                (
                    "assignment_type",
                    models.CharField(
                        choices=[("pdf", "PDF"), ("form", "Free Form")],
                        db_column="assignment_type",
                        default="pdf",
                        max_length=16,
                        verbose_name="Type",
                    ),
                ),
                (
                    "statement",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="uploads/statements",
                        verbose_name="Statement",
                    ),
                ),
            ],
            options={"db_table": "assignment"},
        ),
        migrations.CreateModel(
            name="AssignmentQuestion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=128, verbose_name="Question Title"),
                ),
                (
                    "description",
                    models.CharField(
                        max_length=1000, verbose_name="Question Description"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("NONE", "--------"),
                            ("MULT", "Multiple Choice"),
                            ("TEXT", "Text"),
                            ("FILE", "File"),
                        ],
                        db_column="question_type",
                        default="NONE",
                        max_length=128,
                        verbose_name="Question Type",
                    ),
                ),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="peer_assignment.Assignment",
                    ),
                ),
            ],
            options={"db_table": "assignment_question"},
        ),
        migrations.CreateModel(
            name="AssignmentQuestionMultipleChoice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("choice_text", models.TextField(verbose_name="Item Description")),
                (
                    "marks",
                    models.IntegerField(
                        blank=True, default=0, verbose_name="Number of Marks"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peer_assignment.AssignmentQuestion",
                    ),
                ),
            ],
            options={"db_table": "assignment_question_multiple_choice"},
        ),
        migrations.CreateModel(
            name="AssignmentSubmission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nopublicuse",
                    models.BooleanField(
                        db_column="noPublicUse",
                        verbose_name="Check this if you do not want your submission to be used anonymously in public.",
                    ),
                ),
                (
                    "calibration_id",
                    models.IntegerField(
                        blank=True,
                        db_column="calibration_id",
                        default=0,
                        verbose_name="calibration_id",
                    ),
                ),
                (
                    "time_submitted",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time submitted"
                    ),
                ),
                ("time_last_modified", models.DateTimeField(auto_now=True)),
                ("late_units_used", models.PositiveIntegerField(blank=True, default=0)),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peer_assignment.Assignment",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions_authored",
                        to="peer_course.CourseMember",
                    ),
                ),
            ],
            options={"db_table": "assignment_submission"},
        ),
        migrations.CreateModel(
            name="SubmissionComponent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.TextField(db_column="content", verbose_name="Content"),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to="assignment_submission_files/",
                    ),
                ),
                (
                    "manual_grade",
                    models.FloatField(blank=True, default=None, null=True),
                ),
                (
                    "ta_review_grade",
                    models.FloatField(blank=True, default=None, null=True),
                ),
                (
                    "automatic_grade",
                    models.FloatField(blank=True, default=None, null=True),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peer_assignment.AssignmentQuestion",
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="components",
                        to="peer_assignment.AssignmentSubmission",
                    ),
                ),
            ],
            options={"db_table": "submission_component"},
        ),
    ]
